<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyu.dao.NoteMapper">

    <sql id="note_cat_query_condition">
        <if test="noteCatName != null and noteCatName != ''">
            and noteCatName like concat('%',concat(#{noteCatName},'%'))
        </if>
    </sql>
    <sql id="note_cat_update_condition">
        <set>
            <if test="noteCatName != null and noteCatName != ''">
                noteCatName = #{noteCatName},
            </if>
            <if test="noteCatNum != null and noteCatNum != ''">
                noteCatNum = #{noteCatNum},
            </if>
            <if test="parentNoteCatNum != null and parentNoteCatNum != ''">
                parentNoteCatNum = #{parentNoteCatNum},
            </if>
            <if test="parentNoteCatId != null">
                parentNoteCatId = #{parentNoteCatId},
            </if>
            <if test="orderNum >= 0">
                orderNum = #{orderNum},
            </if>
        </set>
    </sql>


    <select id="queryNoteCatListCount" parameterType="noteCatBean" resultType="java.lang.Integer">
        select count(1)
        from note_cat limit #{start}, #{pageCount}
    </select>

    <select id="queryNoteCatList" parameterType="noteCatBean" resultType="noteCatBean">
        select noteCatId,
               noteCatName,
               noteCatNum,
               parentNoteCatNum,
               parentNoteCatId,
               orderNum,
               createDt,
               createBy
        from note_cat
        order by length(noteCatNum), orderNum desc
            limit #{start}, #{pageCount}
    </select>

    <select id="queryNoteCatByNoteCatName" resultType="java.lang.Integer">
        select count(1)
        from note_cat
        where noteCatName = #{noteCatName}
    </select>

    <select id="queryNoteCatByNoteCatId" resultType="noteCatBean">
        select noteCatId, noteCatName, noteCatNum, parentNoteCatNum, parentNoteCatId, orderNum
        from note_cat
        where noteCatId = #{noteCatId}
    </select>

    <select id="queryMaxNoteCatNum" resultType="java.lang.String">
        select max(noteCatNum)
        from note_cat
        where noteCatNum like concat(#{noteCatNum}, '____')
    </select>

    <insert id="addNoteCat" parameterType="roleBean">
        insert into note_cat(noteCatName, noteCatNum, parentNoteCatNum, parentNoteCatId, orderNum, createDt, createBy)
        values (#{noteCatName}, #{noteCatNum}, #{parentNoteCatNum}, #{parentNoteCatId}, #{orderNum}, #{createDt},
                #{createBy})
    </insert>

    <select id="queryNoteCatRoot" resultType="noteCatBean">
        select noteCatId, noteCatName, noteCatNum, parentNoteCatNum, parentNoteCatId
        from note_cat
        where noteCatNum like '____'
        order by orderNum desc
    </select>

    <select id="queryNoteCatNextByNum" parameterType="java.lang.String" resultType="noteCatBean">
        select noteCatId, noteCatName, noteCatNum, parentNoteCatNum, parentNoteCatId
        from note_cat
        where parentNoteCatNum = #{parentNoteCatNum}
        order by orderNum desc
    </select>

    <select id="queryNoteCatDetailById" parameterType="java.lang.Long" resultType="noteCatBean">
        select noteCatId, noteCatName, noteCatNum, parentNoteCatNum, parentNoteCatId
        from note_cat
        where noteCatId = #{noteCatId}
    </select>

    <update id="updateNoteCat" parameterType="noteCatBean">
        update note_cat
        <include refid="note_cat_update_condition"></include>
        where noteCatId = #{noteCatId}
    </update>

    <delete id="deleteNoteCatById" parameterType="java.lang.Long">
        delete
        from note_cat
        where noteCatId = #{noteCatId}
    </delete>


</mapper>